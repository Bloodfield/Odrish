#!/bin/bash

#   Useful bash scripts for the odrive agent
#   odr
#   By	Bloodfield

##	TODO
#	gion de args? pueden usarse sin orden tal vez
# #	corroborar las verificaciones de -f -d -e
#	review mv, cd, rm, 
#	comillas
#	manejo de error

#   variables
shopt -s expand_aliases
comando=$1
source ~/.Odrish/config

#	HELP
if [[ $comando == "help" ]]
	then
	printf "ord allows you to manage your local data in the Odrive-Cli files
	Developer: Bloodfield
	In each of the following Commands, it is explained the operation, arguments and use of them:
		help
			Gives help menu
			Does not use arguments
			$ odr help 
		init
			Initializes the client
			Does not use arguments
			$ odr init
			[Is not needed if you had configured ~/.config/systemd/user/odrive.service]
		shutdown
			Closes the client
			Does not use arguments
			$ odr shutdown
			[Is not needed if you had configured ~/.config/systemd/user/odrive.service]
		refresh
			Makes refresh in the file or folder
			-r
				Recursive refreshing
			$ odr refresh -[r | s] [folderpath]
		sync
			sync placeholder
			-r
				Recursive sync in case of a folder
			placeholder or folder
			$ odr sync [-r] [placeholder | folder ]
		status
			Shows the general status
			Does not use arguments
			$ odr status
		cd
			syncs a folder an the folders that first folders it contains
			folder
			$ odr cd [folder]
		rm
			deletes a file or folder, both locally and in the cloud
			file or folder
			$ odr rm [file | folder]
	"	
	exit
fi

#	Sets up an authentication key 
if [[ $comando == "auth" ]]
	then
	odrive authenticate $2
	exit
fi

#	Starts service if not configured as automatic
if [[ $comando == "init" ]]
	then
	nohup "~/.odrive-agent/bin/odriveagent" > /dev/null 2>&1 &
	exit
fi

#	Stop service
if [[ $comando == "shutdown" ]]
	then
	odrive shutdown
	exit
fi

#	Status and configs

if [[ $comando == "status" ]]
	then
	odrive status
	cat ~/.Odrish/config
	exit
fi

#	Mount directory
if [[ $comando == "mount" ]]
	then
	if [ ! -d $2 ]; then
		echo "Directory $2 does not exist"
		exit
	fi
	
	#	check if there is something mounted exit
	mountconfig=$(grep mountdir ~/.Odrish/config)
	if [[ ! -z "$mountconfig" ]]; then
		echo "Already mounted:"
		echo $mountconfig
		exit
	fi
	
	#	Add mounting directory
	echo "alias mountdir=\"$2\"" >> ~/.Odrish/config
	
	if [[ $# -gt 2 ]]; then
		odrive mount $2 $3
	else
		odrive mount $2 /
	fi
	
	exit
fi

#	List mounted
if [[ $comando == "lsmount" ]]
	then
	grep mountdir ~/.Odrish/conifg
	exit
fi

#	Unmount directory
if [[ $comando == "unmount" ]]
	then
	if [ ! -d $2 ]; then
		echo "Directory $2 does not exist"
		exit
	fi
	
	if [[ $# -gt 0 ]]; then
		#	when directory is given
		odrive unmount $2
		sed -i "/alias mountdir=$2/d" ~/.Odrish/config
	else
		#	when directory isn't given
		odrive unmount $mountdir
		sed -i "/alias mountdir=$mountdir/d" ~/.Odrish/config
	fi
	exit
fi

#	Refresh
if [[ $comando == "refresh" ]]
	then
	if [[ $2 == "-r" ]]
		then
		argumento="r"
		directorio=$3
	else
		argumento=" "
		directorio=$2
	fi
	
	if [ ! -e "$directorio" ]
		then
		echo "Err : refresh : $directorio does not exist"
		exit
	fi

	#   refresh main dir
	if [[ $directorio =~ .*\.cloud$ ]]
		then
		echo "$directorio is not a directory or .cloudf file"
		exit
	fi

	if [[ $directorio =~ .*\.cloudf ]]
		then
		odrive sync "$directorio"
		while [[ $(odrive syncstate "$directorio") =~ 'Active.*' ]]; do
			sleep 2
		done
		directorio=$(echo $directorio | sed 's/\(.*\)\.cloudf/\1/')
	fi
	odrive refresh "$directorio"
	while [[ $(odrive syncstate "$directorio") =~ 'Active.*' ]]; do
		sleep 2
	done

	#	r recursive refresh only of synced folders
	if [[ $argumento == "r" ]]
	then 
		archivos=($(ls -l "$directorio"| grep "^d" | tr -s " " | cut -d" " -f9-  | tr " " ¬))
		for i in "${archivos[@]}"
		do
			echo $(echo $i | tr ¬ " ")
			odr refresh -r "$directorio/$(echo $i | tr ¬ " ")"
		done
		exit
	fi
	
	
	#   recursive refresh of all folders including handlers
	if [[ $argumento == "s" ]]
	then 
		archivos=($(ls -l "$directorio"| grep "^d" | tr -s " " | cut -d" " -f9-  | tr " " ¬))
		for i in "${archivos[@]}"
		do
			echo $(echo $i | tr ¬ " ")
			odr refresh -r "$directorio/$(echo $i | tr ¬ " ")"
		done
		
		archivos=($(ls -l "$directorio" | grep "cloudf$" | tr -s " " | cut -d" " -f9-  | tr " " ¬))
		for i in "${archivos[@]}"
		do
			echo $(echo $i | tr ¬ " ")
			odr refresh -r "$directorio/$(echo $i | tr ¬ " ")"
		done
		
		#	Reportar problemas en el log
		archivos=($(ls -l "$directorio" | grep "cloudf$" | tr -s " " | cut -d" " -f9-  ))
		if [[ ! -z "$archivos" ]]; then
			date >> ~/.Odrish/Log
			echo refresh failed for: >> ~/.Odrish/Log
			echo $archivos >> ~/.Odrish/Log
		fi
	fi
	exit
fi

#	Sync
if [[ $comando == "sync" ]]
	then
	if [[ $2 == "-r" ]]
		then
		argumento="r"
		directorio=$3
	else
		argumento=" "
		directorio=$2
	fi
	
	if [ ! -e "$directorio" ]
		then
		echo "Err : sync : $directorio does not exist"
		exit
	fi

	#   refresh

	if [[ $directorio =~ .*\.cloud$ ]]
		then
		odrive sync "$directorio"
		while [[ $(odrive syncstate "$directorio") =~ 'Active.*' ]]; do
			sleep 2
		done
		exit
	elif [[ $directorio =~ .*\.cloudf ]]
		then
		odrive sync "$directorio"
		while [[ $(odrive syncstate "$directorio") =~ 'Active.*' ]]; do
			sleep 2
		done
		directorio=$(echo $directorio | sed 's/\(.*\)\.cloudf/\1/')
	elif [ -d "$directorio" ]
		then
		odrive refresh "$directorio"
		while [[ $(odrive syncstate "$directorio") =~ 'Active.*' ]]; do
			sleep 2
		done	
	else
		echo "Wrong tipe of file or directory"
		exit
	fi

	#   recursive sync
	if [[ $argumento == "r" ]]
	then 
	
		archivos=($(ls -l "$directorio"| grep "^d" | tr -s " " | cut -d" " -f9-  | tr " " ¬))
		for i in "${archivos[@]}"
		do
			echo $(echo $i | tr ¬ " ")
			odr sync -r "$directorio/$(echo $i | tr ¬ " ")"
		done

		archivos=($(ls -l "$directorio" | grep "cloud[f]*$" | tr -s " " | cut -d" " -f9-  | tr " " ¬))
		for i in "${archivos[@]}"
		do
			echo $(echo $i | tr ¬ " ")
			odr sync -r "$directorio/$(echo $i | tr ¬ " ")"
		done
		
		#	Reportar problemas en el log
		archivos=($(ls -l "$directorio" | grep "cloud[f]*$" | tr -s " " | cut -d" " -f9-  ))
		if [[ ! -z "$archivos" ]]; then
			date >> ~/.Odrish/Log
			echo sync failed for: >> ~/.Odrish/Log
			echo $archivos >> ~/.Odrish/Log
		fi
	fi

	exit
fi

#	Syncn't

#	odrivish cd
if [[ $comando == "cd" ]]
	then
	
	#check if file exist
	directorio=$2
	if [ ! -d "$directorio" ]
	then
		echo "Err : odr cd : $directorio no es un directorio o no existe"
		exit
	fi;

	#   refresh

	odrive refresh $directorio
	while [[ $(odrive syncstate "$directorio") =~ 'Active.*' ]]; do
	sleep 2
	done

	archivos=($(ls -l "$directorio" | grep "cloudf$" | tr -s " " | cut -d" " -f9-  | tr " " ¬))
	for i in "${archivos[@]}"
	do
		echo $(echo $i | tr ¬ " ")
		temp="$directorio/$(echo $i | tr ¬ " ")"
		odrive sync "$temp"
		while [[ $(odrive syncstate "$temp") =~ 'Active.*' ]]; do
			sleep 2
		done
	done
	exit
fi
#	odrivish rm
if [[ $comando == "rm" ]]
	then
	
	
	if [[ $2 == "-r" ]]
		then
		argumento="r"
		directorio=$3
	else
		argumento=" "
		directorio=$2
	fi
	
	if [ ! -e "$directorio" ]
		then
		echo "$directorio no xiste"
		exit
	fi
	
	#   refresh

	if [[ $directorio =~ .*\.cloud$ ]]
		then
		echo "Err : odr rm : los manejadores no son válidos"
		exit
	fi
	if [[ $directorio =~ .*\.cloudf ]]
		then
		echo "Err : odr rm : los manejadores no son válidos"
		exit
	fi
	rm -R $directorio
	odrive refresh .
	while [[ $(odrive status | grep Trash: | cut -f2 -d" " ) -eq '0' ]]; do
	sleep 2
	done
	odrive emptytrash

	exit
fi

#	odrivish mv

#	Add target

#	Sync Target(s)

#	(un)set localsync

#	localsync sync

#	autolocalsync

echo " Err : comando no reconocido. Opciones:"
echo "	help"
echo "	init"
echo "	shutdown"
echo "	refresh"
echo "	sync"
echo "	status"
echo "	cd"
echo "	rm"
